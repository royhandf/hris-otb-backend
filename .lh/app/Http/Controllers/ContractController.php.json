{
    "sourceFile": "app/Http/Controllers/ContractController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1752725708192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752731306005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n <?php\n \n-namespace App\\Http\\Controllers\\API;\n+namespace App\\Http\\Controllers;\n \n use App\\Http\\Controllers\\Controller;\n use App\\Models\\Contract;\n use Illuminate\\Http\\Request;\n"
                }
            ],
            "date": 1752725708192,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers\\API;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Models\\Contract;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Database\\Eloquent\\ModelNotFoundException;\nuse Exception;\n\nclass ContractController extends Controller\n{\n    public function index()\n    {\n        $data = Contract::all();\n        return response()->json([\n            'status' => true,\n            'message' => 'Data kontrak berhasil diambil.',\n            'data' => $data\n        ], 200);\n    }\n\n    public function store(Request $request)\n    {\n        try {\n            $validated = $request->validate([\n                'employee_id' => 'required|string',\n                'type'        => 'required|in:pkwt,pkwtt,magang',\n                'start_date'  => 'required|date',\n                'end_date'    => 'required|date|after_or_equal:start_date',\n                'status'      => 'required|in:aktif,berakhir,diperpanjang',\n                'description' => 'nullable|string',\n            ]);\n\n            $contract = Contract::create($validated);\n\n            return response()->json([\n                'status' => true,\n                'message' => 'Kontrak berhasil ditambahkan.',\n                'data' => $contract\n            ], 201);\n        } catch (Exception $e) {\n            return response()->json([\n                'status' => false,\n                'message' => 'Gagal menambahkan kontrak.',\n                'error' => $e->getMessage()\n            ], 400);\n        }\n    }\n\n    public function show($id)\n    {\n        try {\n            $contract = Contract::findOrFail($id);\n            return response()->json([\n                'status' => true,\n                'message' => 'Data kontrak berhasil ditemukan.',\n                'data' => $contract\n            ], 200);\n        } catch (ModelNotFoundException $e) {\n            return response()->json([\n                'status' => false,\n                'message' => 'Data kontrak tidak ditemukan.'\n            ], 404);\n        }\n    }\n\n    public function update(Request $request, $id)\n    {\n        try {\n            $contract = Contract::findOrFail($id);\n\n            $validated = $request->validate([\n                'employee_id' => 'sometimes|required|string',\n                'type'        => 'sometimes|required|in:pkwt,pkwtt,magang',\n                'start_date'  => 'sometimes|required|date',\n                'end_date'    => 'sometimes|required|date|after_or_equal:start_date',\n                'status'      => 'sometimes|required|in:aktif,berakhir,diperpanjang',\n                'description' => 'nullable|string',\n            ]);\n\n            $contract->update($validated);\n\n            return response()->json([\n                'status' => true,\n                'message' => 'Kontrak berhasil diperbarui.',\n                'data' => $contract\n            ], 200);\n        } catch (ModelNotFoundException $e) {\n            return response()->json([\n                'status' => false,\n                'message' => 'Data kontrak tidak ditemukan.'\n            ], 404);\n        } catch (Exception $e) {\n            return response()->json([\n                'status' => false,\n                'message' => 'Gagal memperbarui kontrak.',\n                'error' => $e->getMessage()\n            ], 400);\n        }\n    }\n\n    public function destroy($id)\n    {\n        try {\n            $contract = Contract::findOrFail($id);\n            $contract->delete();\n\n            return response()->json([\n                'status' => true,\n                'message' => 'Kontrak berhasil dihapus.'\n            ], 200);\n        } catch (ModelNotFoundException $e) {\n            return response()->json([\n                'status' => false,\n                'message' => 'Data kontrak tidak ditemukan.'\n            ], 404);\n        }\n    }\n}\n"
        }
    ]
}