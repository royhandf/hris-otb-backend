{
    "sourceFile": "app/Http/Controllers/AttendanceController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1752633004764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752633085252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n                 ->get();\n         }\n         else {\n             return response()->json([\n-                'message' => 'Dilarang. Anda tidak memiliki izin untuk mengakses resource ini.',\n+                'message' => 'Dilarang. ',\n                 'user_role' => $user->role,\n             ], 403);\n         }\n \n"
                },
                {
                    "date": 1752633099497,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n                 ->get();\n         }\n         else {\n             return response()->json([\n-                'message' => 'Dilarang. ',\n+                'message' => 'Dilarang. Anda tidak memiliki izin untuk mengakses resource ini.',\n                 'user_role' => $user->role,\n             ], 403);\n         }\n \n"
                },
                {
                    "date": 1752634115664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n {\n     public function index()\n     {\n         $user = Auth::user();\n+        dd($user->role);\n \n         // Cek apakah user HR\n         if ($user->role === 'hr') {\n             $attendances = Attendance::with('employee')->get();\n"
                },
                {
                    "date": 1752634156427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,8 @@\n {\n     public function index()\n     {\n         $user = Auth::user();\n-        dd($user->role);\n \n         // Cek apakah user HR\n         if ($user->role === 'hr') {\n             $attendances = Attendance::with('employee')->get();\n"
                },
                {
                    "date": 1752634692183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n             ];\n         });\n \n         return response()->json([\n-            'message' => 'Absensi kehadiran berhasil dibuat.',\n+            'message' => 'Absensi kehadiran berhasil ditampilkan.',\n             'data'    => $formatted,\n         ]);\n     }\n \n"
                }
            ],
            "date": 1752633004764,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Attendance;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass AttendanceController extends Controller\n{\n    public function index()\n    {\n        $user = Auth::user();\n\n        // Cek apakah user HR\n        if ($user->role === 'hr') {\n            $attendances = Attendance::with('employee')->get();\n        }\n        // Jika user karyawan, ambil hanya miliknya\n        elseif ($user->role === 'karyawan') {\n            if (!$user->employee) {\n                return response()->json([\n                    'message' => 'Data karyawan tidak ditemukan untuk pengguna ini.',\n                ], 404);\n            }\n\n            $attendances = Attendance::with('employee')\n                ->where('employee_id', $user->employee->employee_id)\n                ->get();\n        }\n        else {\n            return response()->json([\n                'message' => 'Dilarang. Anda tidak memiliki izin untuk mengakses resource ini.',\n                'user_role' => $user->role,\n            ], 403);\n        }\n\n        $formatted = $attendances->map(function ($item) {\n            return [\n                'attendance_id' => $item->attendance_id,\n                'employee_id'   => $item->employee_id,\n                'date'          => $item->date,\n                'check_in'      => $item->check_in,\n                'check_out'     => $item->check_out,\n                'status'        => $item->status,\n                'created_at'    => $item->created_at,\n                'updated_at'    => $item->updated_at,\n                'employee'      => [\n                    'name'                => $item->employee->name,\n                    'phone'               => $item->employee->phone,\n                    'address'             => $item->employee->address,\n                    'birth_date'          => $item->employee->birth_date,\n                    'gender'              => $item->employee->gender,\n                    'photo_path'          => $item->employee->photo_path,\n                    'bank_name'           => $item->employee->bank_name,\n                    'bank_account_number' => $item->employee->bank_account_number,\n                    'join_date'           => $item->employee->join_date,\n                    'department_id'       => $item->employee->department_id,\n                    'position_id'         => $item->employee->position_id,\n                    'status'              => $item->employee->status,\n                    'created_at'          => $item->employee->created_at,\n                    'updated_at'          => $item->employee->updated_at,\n                ]\n            ];\n        });\n\n        return response()->json([\n            'message' => 'Absensi kehadiran berhasil dibuat.',\n            'data'    => $formatted,\n        ]);\n    }\n\n    public function store(Request $request)\n    {\n        $data = $request->validate([\n            'employee_id' => 'required|uuid|exists:employees,employee_id',\n            'date'        => 'required|date',\n            'check_in'    => 'required|date_format:Y-m-d H:i:s',\n            'check_out'   => 'nullable|date_format:Y-m-d H:i:s|after:check_in',\n            'status'      => 'required|in:hadir,izin,sakit,cuti,alpha',\n        ]);\n\n        $attendance = Attendance::create([\n            'attendance_id' => Str::uuid(),\n            'employee_id'   => $data['employee_id'],\n            'date'          => $data['date'],\n            'check_in'      => $data['check_in'],\n            'check_out'     => $data['check_out'],\n            'status'        => $data['status'],\n        ]);\n\n        // Load relasi employee, dan pilih field yang diinginkan saja\n        $attendance->load(['employee' => function ($query) {\n            $query->select(\n                'employee_id', // tetap harus di-select untuk relasi\n                'name', 'phone', 'address', 'birth_date',\n                'gender', 'photo_path', 'bank_name', 'bank_account_number',\n                'join_date', 'department_id', 'position_id', 'status',\n                'created_at', 'updated_at'\n            );\n        }]);\n\n        return response()->json([\n            'attendance_id' => $attendance->attendance_id,\n            'employee_id'   => $attendance->employee_id,\n            'date'          => $attendance->date,\n            'check_in'      => $attendance->check_in,\n            'check_out'     => $attendance->check_out,\n            'status'        => $attendance->status,\n            'created_at'    => $attendance->created_at,\n            'updated_at'    => $attendance->updated_at,\n            'employee'      => [\n                'name'                => $attendance->employee->name,\n                'phone'               => $attendance->employee->phone,\n                'address'             => $attendance->employee->address,\n                'birth_date'          => $attendance->employee->birth_date,\n                'gender'              => $attendance->employee->gender,\n                'photo_path'          => $attendance->employee->photo_path,\n                'bank_name'           => $attendance->employee->bank_name,\n                'bank_account_number' => $attendance->employee->bank_account_number,\n                'join_date'           => $attendance->employee->join_date,\n                'department_id'       => $attendance->employee->department_id,\n                'position_id'         => $attendance->employee->position_id,\n                'status'              => $attendance->employee->status,\n                'created_at'          => $attendance->employee->created_at,\n                'updated_at'          => $attendance->employee->updated_at,\n            ],\n        ], 201);\n    }\n    public function show($id)\n    {\n        $attendance = Attendance::with('employee')->findOrFail($id);\n        return response()->json($attendance);\n    }\n\n    public function update(Request $request, $id)\n    {\n        $attendance = Attendance::findOrFail($id);\n\n        $data = $request->validate([\n            'check_in' => 'nullable|date_format:Y-m-d H:i:s',\n            'check_out' => 'nullable|date_format:Y-m-d H:i:s',\n            'status' => 'nullable|in:hadir,izin,sakit,cuti,alpha',\n        ]);\n\n        $attendance->update($data);\n\n        $attendance->load('employee:employee_id,name');\n\n        return response()->json([\n            'message' => 'Absensi kehadiran berhasil diperbaiki',\n            'data' => $attendance\n        ]);\n    }\n\n    public function destroy($id)\n    {\n        Attendance::findOrFail($id)->delete();\n        return response()->json(['message' => 'Absensi dihapus']);\n    }\n}\n"
        }
    ]
}